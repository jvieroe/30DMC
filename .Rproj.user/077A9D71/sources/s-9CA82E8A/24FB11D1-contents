pacman::p_load(tmap,
               rgdal,
               raster,
               geosphere,
               rgeos,
               readr,
               dplyr,
               sf,
               lwgeom,
               nngeo,
               progress,
               tictoc,
               future,
               data.table,
               furrr,
               purrr,
               units,
               smoothr,
               stringr,
               xml2,
               readr,
               haven,
               tidylog)

# set data path
data_path_func <- function(x) {
  x <- getwd()
  if (x == "/Users/jeppeviero/Dropbox/Under Empire/Data and code") {
    
    data_path <- "/Users/jeppeviero/Dropbox/02 PhD/14 data/plague_data/"
    
  } else if (x == "C:/Users/fmg720/Dropbox/Under Empire/Data and code") {
    
    data_path <- "C:/Users/fmg720/Dropbox/02 PhD/14 data/plague_data/"
    
  }
  
}

data_path <- data_path_func()
data_path

# ---------------------------------------------------------
# Load data
# ---------------------------------------------------------

# ----- Plague data
plague <- read_csv(file = paste(data_path,
                                "plague_outbreaks.csv",
                                sep = "")) %>% 
  rename(latitude = Lon_WGS84,
         longitude = Lat_WGS84,
         year = Year_of_Outbreak,
         city = Location) %>% 
  mutate(outbreak = 1) %>% # Latitude and longitude were reversed
  dplyr::select(-c(X_Coord_ERTS89,
                   Y_Coord_ERTS89))

eisleben <- plague[plague$city == "Eisleben",]
eisleben$year[1] <- 1398
eisleben$year[2] <- 1681
eisleben$longitude <- 11.550808
eisleben$latitude <- 51.524881

plague <- plague %>%
  filter(city != "Eisleben") %>%
  rbind(eisleben) %>% 
  group_by(city, latitude, longitude) %>%
  dplyr::mutate(city_id = cur_group_id()) %>%
  ungroup() %>%
  as.data.frame() %>% 
  arrange(city, year)

rm(eisleben)

plague %>% filter(city == "Arzon") %>% head()


# ----- Manual changes to coordinates 
plague <- plague %>% 
  filter(year != 9999 ) %>% 
  mutate(latitude = ifelse(city == "Arzon", 47.55035834833525, latitude),
         longitude = ifelse(city == "Arzon", -2.8994939487447136, longitude)) %>% 
  mutate(latitude = ifelse(city == "Ayr", 55.44398743794979, latitude),
         longitude = ifelse(city == "Ayr", -4.6182861696066535, longitude)) %>% 
  mutate(latitude = ifelse(city == "Bizerte", 37.28380353976946, latitude),
         longitude = ifelse(city == "Bizerte", 9.855753515366775, longitude)) %>% 
  mutate(latitude = ifelse(city == "Cagliari", 39.240291279783634, latitude),
         longitude = ifelse(city == "Cagliari", 9.117219508133774, longitude)) %>% 
  mutate(latitude = ifelse(city == "Dawlish", 50.58306934776201, latitude),
         longitude = ifelse(city == "Dawlish", -3.474269845282217, longitude)) %>% 
  mutate(latitude = ifelse(city == "El Ferrol", 43.49107796432825, latitude),
         longitude = ifelse(city == "El Ferrol", -8.222470673647116, longitude))

plague %>% filter(city == "El Ferrol") %>% head()

# ----- Manual changes to city names 
plague <- plague %>% 
  mutate(city = str_to_lower(city, locale = "en")) %>% 
  #mutate(city_backup = city) %>% 
  mutate(city = gsub(pattern = "ñ", "n", city)) %>% 
  mutate(city = gsub(pattern = "é", "e", city)) %>% 
  mutate(city = gsub(pattern = "è", "e", city)) %>%
  mutate(city = gsub(pattern = "á", "a", city)) %>% 
  mutate(city = gsub(pattern = "à", "a", city)) %>% 
  mutate(city = gsub(pattern = "ä", "a", city)) %>% 
  mutate(city = gsub(pattern = "í", "i", city)) %>% 
  mutate(city = gsub(pattern = "ì", "i", city)) %>% 
  mutate(city = gsub(pattern = "ú", "u", city)) %>% 
  mutate(city = gsub(pattern = "ù", "u", city)) %>% 
  mutate(city = gsub(pattern = "ó", "o", city)) %>%
  mutate(city = gsub(pattern = "ò", "o", city)) %>% 
  mutate(city = gsub(pattern = "ë", "e", city)) %>% 
  mutate(city = gsub(pattern = "ö", "oe", city)) %>% 
  mutate(city = gsub(pattern = "ï", "i", city)) %>% 
  mutate(city = gsub(pattern = "ü", "ue", city)) %>% 
  mutate(city = gsub(pattern = "å", "aa", city)) %>%
  mutate(city = gsub(pattern = "æ", "ae", city)) %>% 
  mutate(city = gsub(pattern = "ø", "oe", city)) %>% 
  mutate(city = gsub(pattern = "ç", "c", city)) %>% 
  mutate(city = gsub(pattern = "ê", "e", city)) %>% 
  mutate(city = gsub(pattern = "û", "u", city)) %>% 
  mutate(city = gsub(pattern = "ô", "o", city)) %>% 
  mutate(city = gsub(pattern = "â", "a", city)) %>% 
  mutate(city = gsub(pattern = "î", "i", city)) %>% 
  mutate(city = gsub(pattern = "\\-", " ", city)) %>% 
  mutate(city = gsub(pattern = "\\.", "", city)) %>% 
  mutate(city = gsub(pattern = "\\'", " ", city)) %>% 
  mutate(city = gsub(pattern = "saint", "st", city)) %>% 
  mutate(city = gsub(pattern = "sankt", "st", city))

any(is.na(plague$city))

# ---------------------------------------------------------
# Match plague cities to contemporary borders
# ---------------------------------------------------------
continent_vector <- as.character(c("Antarctica"))

ne <- st_read(dsn = "0_raw data/ne_10m_admin_0_countries/ne_10m_admin_0_countries",
              layer = "ne_10m_admin_0_countries",
              crs = 4326) %>% 
  filter(CONTINENT %!in% continent_vector) %>% 
  dplyr::select(c(SOVEREIGNT,
                  GEOUNIT,
                  SUBREGION,
                  REGION_WB,
                  REGION_UN,
                  CONTINENT,
                  ADM0_A3)) %>% 
  mutate(poly_id = row_number())

# ----- Match cities to geographic features
plague_sf <- plague %>% 
  distinct(., city_id, .keep_all = T) %>% 
  st_as_sf(.,
           coords = c("longitude", "latitude"),
           crs = 4326) %>%
  mutate(row_id = row_number())

inside_outside <- sapply(st_intersects(plague_sf, ne), function(x){length(x)==0})

inside_outside_df <- data.frame(is_outside = inside_outside) %>% 
  dplyr::mutate(row_id = row_number())

inside_polygons <- plague_sf %>%
  as.data.frame() %>%
  dplyr::select(-geometry) %>% 
  left_join(.,
            inside_outside_df,
            by = "row_id") %>%
  filter(is_outside == FALSE) %>% 
  mutate(match_id = row_number()) %>% 
  as.data.frame()

outside_polygons <- plague_sf %>%
  as.data.frame() %>%
  dplyr::select(-geometry) %>% 
  left_join(.,
            inside_outside_df,
            by = "row_id") %>%
  filter(is_outside == TRUE) %>% 
  mutate(match_id = row_number()) %>% 
  as.data.frame()

plague_sf <- plague_sf %>% 
  filter(city_id %in% inside_polygons$city_id)

int <- sf::st_intersects(plague_sf, ne)

poly_match <- data.frame(vec_length = rep(NA, length(int)),
                         poly_id = rep(NA, length(int)),
                         match_id = seq(1, nrow(int), 1))

for (j in 1:length(int)) {
  
  length <- length(int[[j]])
  
  poly_match[j,1] <- length(int[[j]])
  
  if (length == 1) {
    
    poly_match[j,2] <- int[[j]]
    
  } else {
    
    poly_match[j,2] <- NA
    
  }
  
}

any(is.na(poly_match$poly_id))

ne <- ne %>% 
  as.data.frame() %>% 
  dplyr::select(-geometry)

poly_match <- poly_match %>% 
  left_join(., 
            ne, 
            by = "poly_id")

inside_polygons <- inside_polygons %>% 
  left_join(., poly_match, by = "match_id") %>% 
  dplyr::select(-c(row_id,
                   is_outside,
                   match_id,
                   vec_length,
                   poly_id,
                   city,
                   year,
                   outbreak))

plague <- plague %>% 
  left_join(.,
            inside_polygons,
            by = "city_id")

nas <- plague %>% 
  filter(is.na(GEOUNIT)) %>% 
  distinct(., city_id, .keep_all = T)

rm(nas, int, ne, inside_outside, inside_outside_df, poly_match, plague_sf, inside_polygons, outside_polygons)

# ---------------------------------------------------------
# Spread panel to full period
# ---------------------------------------------------------
min_year <- min(plague$year)
max_year <- max(plague$year)

plague_expanded <- plague %>% 
  dplyr::select(c(city_id,
                  year)) %>% 
  group_by(city_id) %>% 
  summarise_all(~ list(seq(min_year, max_year, 1))) %>%
  unnest() %>% 
  as.data.frame()

city_dat <- plague %>% 
  dplyr::select(-c(outbreak,year)) %>% 
  distinct(., city_id, .keep_all = T)

plague <- plague %>% 
  dplyr::select(c(city_id, year, outbreak))

plague_expanded <- plague_expanded %>% 
  left_join(.,
            plague,
            by = c("city_id", "year")) %>% 
  left_join(.,
            city_dat,
            by = c("city_id")) #%>% 
#mutate(outbreak = ifelse(is.na(outbreak), 0, 1))

rm(city_dat, plague)
table(plague_expanded$outbreak, useNA = "always")

# ---------------------------------------------------------
# Detect unmatched cities
# ---------------------------------------------------------
cities <- load_cities_func() %>% 
  distinct(., city_id, .keep_all = TRUE) %>% 
  arrange(country, city) %>% 
  dplyr::select(-city_id) %>% 
  mutate(city_geo = paste(city,
                          GEOUNIT,
                          sep = "_")) %>% 
  dplyr::select(c(city,
                  GEOUNIT,
                  city_geo,
                  city_geo,
                  latitude,
                  longitude))

plague <- plague_expanded %>% 
  distinct(., city_id, .keep_all = TRUE) %>% 
  dplyr::select(-city_id) %>% 
  mutate(city_geo = paste(city,
                          GEOUNIT,
                          sep = "_")) %>% 
  dplyr::select(c(city,
                  GEOUNIT,
                  city_geo,
                  city_geo,
                  latitude,
                  longitude))

# ----- direct matches
matches <- plague %>% 
  filter(city_geo %in% cities$city_geo)

# ----- indirect matches
plague <- plague %>% 
  filter(city_geo %!in% cities$city_geo) %>% 
  mutate(city_id_plague = row_number())

cities <- cities %>% 
  filter(city_geo %!in% matches$city_geo) %>% 
  mutate(city_id = row_number())

cit_sf <- st_as_sf(cities,
                   coords = c("longitude", "latitude"),
                   crs = 4326)

plague_sf <- st_as_sf(plague,
                      coords = c("longitude", "latitude"),
                      crs = 4326)

int <- st_nn(cit_sf,
             plague_sf,
             sparse = T, k = 1, maxdist = Inf, returnDist = T)

city_match <- data.frame(city_id = rep(NA, length(int[[1]])),
                         city_id_plague = rep(NA, length(int[[1]])),
                         plague_dist = rep(NA, length(int[[1]])))


for (j in 1:length(int[[1]])) {
  
  city_match[j, 1] <- j
  
  city_match[j, 2] <- int[[1]][[j]]
  
  city_match[j, 3] <- int[[2]][[j]]
  
}

cities <- cities %>% 
  dplyr::select(city, GEOUNIT, city_id)

plague <- plague %>% 
  dplyr::select(city, GEOUNIT, city_id_plague) %>% 
  rename(city_plague = city,
         GEOUNIT_plague = GEOUNIT)

city_match <- city_match %>% 
  left_join(.,
            cities,
            by = "city_id") %>% 
  left_join(.,
            plague,
            by = "city_id_plague") %>% 
  arrange(plague_dist)

city_fix <- city_match %>% 
  filter(plague_dist < 5000) %>% 
  mutate(match_combo = paste(city,
                             city_plague,
                             sep = "_"))

city_fix %>% dplyr::select(match_combo) %>% pull()

city_fix1 <- city_fix %>% 
  filter(match_combo == "beirut_beyrouth" | 
           match_combo == "turin_torino" | 
           match_combo == "cork_corcaigh" | 
           match_combo == "vienna_wien" |
           match_combo == "reading wokingham_reading" |
           match_combo == "le havre_le havre" |
           match_combo == "fribourg_freiburg" |
           match_combo == "alexandria_alexandrie" |
           match_combo == "padua_padova" | 
           match_combo == "alcoy_alcoi" |
           match_combo == "reggio calabria_reggio di calabria" |
           match_combo == "wexford_loch garman" |
           match_combo == "sanlucarde de barrameda_sanlucar de barrameda" |
           match_combo == "geneva_geneve" |
           match_combo == "warsaw_warszawa" | 
           match_combo == "cologne_koeln" |
           match_combo == "cherbourg_cherbourg octeville" |
           match_combo == "digne_digne les bains" |
           match_combo == "santander_santander" |
           match_combo == "genoa_genova" |
           match_combo == "lisbon_lisboa" | 
           match_combo == "passau_passau" |
           match_combo == "seville_sevilla" |
           match_combo == "la coruna_a coruna" |
           match_combo == "algiers_alger" |
           match_combo == "naples_napoli" |
           match_combo == "rome_roma" | 
           match_combo == "eichstaett_eichstatt" |
           match_combo == "annaba_bone" |
           match_combo == "venice_venezia" |
           match_combo == "pamplona_iruna" |
           match_combo == "halle_halle (saale)" |
           match_combo == "malaga_malaga" | 
           match_combo == "hanover_hannover" |
           match_combo == "nuremberg_nuernberg" |
           match_combo == "ferrol_el ferrol" |
           match_combo == "munich_muenchen" |
           match_combo == "besancon_besaneon" |
           match_combo == "poole_poole" | 
           match_combo == "jaroslav_jaroslaw" |
           match_combo == "puerto de santa maria_el puerto de santa maria" |
           match_combo == "la spezia_la spezia" |
           match_combo == "tuy_tui" |
           match_combo == "florence_firenze" |
           match_combo == "lerida_lleida" | 
           match_combo == "guimaraes_guimarães" |
           match_combo == "syracuse_siracusa" |
           match_combo == "frankfurt an der oder_frankfurt (oder)" |
           match_combo == "tarrasa_terrassa" |
           match_combo == "toulon_toulon" | 
           match_combo == "cairo_kairo" |
           match_combo == "langensalza_bad langensalza" | 
           match_combo == "villeneuve_villeneuve sur lot" |
           match_combo == "windsor and maidenhead_eton college" | 
           match_combo == "tangier_tanger" |
           match_combo == "folkestone_sandgate" | 
           match_combo == "montreux_chillon (chateau)" |
           match_combo == "reggio emilia_reggio nell emilia" |
           match_combo == "crewe_wistaston")

city_fix2 <- city_fix %>% 
  filter(match_combo %!in% city_fix1$match_combo)
city_fix2 %>% dplyr::select(match_combo) %>% pull()

rm(city_fix2, city_fix, int, matches, city_match,plague_sf,cit_sf,cities,plague)

city_fix1 <- city_fix1 %>% 
  dplyr::select(c(city_plague,
                  GEOUNIT_plague,
                  city)) %>% 
  rename(new_city = city) %>% 
  rename(city = city_plague,
         GEOUNIT = GEOUNIT_plague)


# ---------------------------------------------------------
# Add changes
# ---------------------------------------------------------
plague_expanded <- plague_expanded %>%
  left_join(.,
            city_fix1,
            by = c("city","GEOUNIT"))

plague_expanded <- plague_expanded %>% 
  mutate(city = ifelse(!is.na(new_city),
                       new_city,
                       city))

rm(city_fix1)


plague_expanded <- plague_expanded %>% 
  dplyr::select(c(city,
                  longitude,
                  latitude,
                  year,
                  outbreak,
                  SOVEREIGNT,
                  city_id)) %>% 
  arrange(SOVEREIGNT, city, year)

temp <- plague_expanded %>% 
  filter(outbreak == 1) %>%
  arrange(SOVEREIGNT, city, year) %>% 
  group_by(city_id) %>% 
  mutate(seq_outbreak = row_number()) %>% 
  ungroup() %>% 
  dplyr::select(c(city_id,
                  year,
                  seq_outbreak))

plague_expanded <- plague_expanded %>% 
  left_join(.,
            temp,
            by = c("city_id",
                   "year"))
rm(temp)

plague_expanded <- plague_expanded %>% 
  dplyr::select(-city_id) %>% 
  group_by(city, latitude, longitude) %>%
  dplyr::mutate(city_id = cur_group_id()) %>%
  ungroup() %>%
  distinct(city_id, year, outbreak,
           .keep_all = T)

# ----- Create panel data
plague_panel <- plague_expanded %>% 
  mutate(seq_outbreak_inter = seq_outbreak,
         temp = ifelse(outbreak == 1,
                       year,
                       NA),
         outbreak_inter = outbreak) %>% 
  group_by(city_id) %>% 
  fill(seq_outbreak_inter, .direction = "down") %>% 
  fill(temp, .direction = "down") %>% 
  fill(outbreak_inter, .direction = "down") %>% 
  ungroup() %>% 
  mutate(years_since = year - temp) %>% 
  dplyr::select(-c(seq_outbreak, seq_outbreak_inter))

# ----- Create decadal data
floor_decade <- function(value){ return(value - value %% 10) }
ceiling_decade <- function(value){ return(floor_decade(value)+10) }
round_to_decade <- function(value){ return(round(value / 10) * 10) }

substrRight <- function(x, n){
  substr(x, nchar(x)-n+1, nchar(x))
}

plague_decade <- plague_panel %>% 
  mutate(decade = ceiling_decade(year)) %>% 
  # mutate(temp = as.numeric(substrRight(as.character(year), 1))) %>% 
  # mutate(decade2 = ifelse(temp == 0 & outbreak == 1,
  #                         decade - 10,
  #                         decade))
  group_by(city_id, decade) %>% 
  mutate(n_outbreaks = sum(outbreak,
                           na.rm = T),
         since_mostrecent = ifelse(outbreak_inter == 1,
                                   decade - temp,
                                   NA)) %>% 
  slice(which.min(since_mostrecent)) %>% 
  ungroup() %>% 
  dplyr::select(-c(temp, years_since, year))


# ----- Tidy data
plague_panel <- plague_panel %>% 
  dplyr::select(-c(city_id, temp)) %>% 
  rename(lon_plague1 = longitude,
         lat_plague1 = latitude) %>% 
  mutate(outbreak = ifelse(is.na(outbreak),
                           0,
                           outbreak),
         outbreak_inter = ifelse(is.na(outbreak_inter),
                                 0,
                                 outbreak_inter))

plague_decade <- plague_decade %>% 
  dplyr::select(-c(city_id, outbreak, outbreak_inter)) %>% 
  rename(lon_plague2 = longitude,
         lat_plague2 = latitude) %>% 
  rename(year = decade)

#rm(plague_expanded)

# ----- Export data
save(plague_panel,
     file = paste(data_path,
                  "plague_panel.Rdata",
                  sep = "")
)

haven::write_dta(data = plague_panel,
                 path = paste(data_path,
                              "plague_panel.dta",
                              sep = ""),
                 version = 14)

save(plague_decade,
     file = paste(data_path,
                  "plague_decades.Rdata",
                  sep = "")
)

haven::write_dta(data = plague_decade,
                 path = paste(data_path,
                              "plague_decades.dta",
                              sep = ""),
                 version = 14)



# ---------------------------------------------------------
# Test data
# ---------------------------------------------------------
library(fixest)
library(stargazer)

cities <- load_cities_func() %>% 
  filter(source_pol_control == "CENTENNIA") %>% 
  dplyr::select(c(city,
                  country,
                  latitude,
                  longitude,
                  year,
                  city_id,
                  city_pop_i,
                  pol_control,
                  GEOUNIT,
                  SOVEREIGNT,
                  SUBREGION,
                  REGION_WB,
                  REGION_UN)) %>%
  dplyr::rename(state = pol_control,
                pop = city_pop_i) %>% 
  dplyr::mutate(unit_year = paste(state,
                                  year,
                                  sep = "_"),
                pop = ifelse(pop > 5000, pop, NA)) %>% 
  mutate(ln_pop = log(pop)) %>% 
  as.data.frame()

plague <- cities %>% 
  left_join(.,
            plague_panel,
            by = c("city",
                   "SOVEREIGNT",
                   "year")) %>% 
  left_join(.,
            plague_decade,
            by = c("city",
                   "SOVEREIGNT",
                   "year"))

table(plague$n_outbreaks, useNA = "always")

plague <- plague %>% 
  mutate(n_outbreaks = case_when(n_outbreaks == 0 ~ 0,
                                 n_outbreaks > 0 ~ n_outbreaks,
                                 is.na(n_outbreaks) ~ 0,
  )) %>% 
  mutate(had_outbreak = case_when(n_outbreaks == 0 ~ 0,
                                  n_outbreaks > 0 ~ 1))

table(plague$n_outbreaks, useNA = "always")
table(plague$had_outbreak, useNA = "always")

m1 <- feols(ln_pop ~ had_outbreak | city_id + year, plague,
            panel.id = ~city_id+year)

etable(m1, order = "f", drop="Int")


